from common import *

def to_mont(x: int, m: int, r: int) -> int:
    return (x * r ) % m


n_words = 24
bits = 384 * 2
# m = 21888242871839275222246405745257275088696311157297823662689037894645226208583
m = 41898490967918953402344214791240637128170709919953949071783502921025352812571106773058893763790338921418070971888253786114353726529584385201591605722013126468931404347949840543007986327743462853720628051692141265303114721689601
a = 2
b = 0x01373684A8C9DCAE7A016AC5D7748D3313CD8E39051C596560835DF0C9E50A5B59B882A92C78DC537E51A16703EC9855C77FC3D8BB21C8D68BB8CFB9DB4B8C8FBA773111C36C8B1B4E8F1ECE940EF9EAAD265458E06372009C9A0491678EF4
b3 = b * 3 % m
a = to_mont(a, m, 2**bits)
b = to_mont(b, m, 2**bits)
b3 = to_mont(b3, m, 2**bits)
print(f"BIG_INTEGER_CHUNKS{n_words}({chunks(a, n_words=n_words)})")
print(f"BIG_INTEGER_CHUNKS{n_words}({chunks(b, n_words=n_words)})")
print(f"BIG_INTEGER_CHUNKS{n_words}({chunks(b3, n_words=n_words)})")
